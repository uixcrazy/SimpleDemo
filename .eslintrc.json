{
  "extends": "@react-native-community",
  "plugins": [
    "@typescript-eslint",
    "jsdoc"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 8,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    },
    "parserOptions": {
      "project": ["./tsconfig.json"] // Specify it only for TypeScript files
    },
    "allowImportExportEverywhere": true
  },
  "rules": {
    "prettier/prettier": 0,

    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["error"],
    "no-underscore-dangle":  ["warn"],
    "template-curly-spacing": ["warn", "never"],
    "indent": ["warn", 2, {"ignoredNodes": ["TemplateLiteral"]}],
    "quotes": ["warn", "double"],
    "no-unused-vars": "warn",
    "import/no-useless-path-segments": "off",
    "import/no-unresolved": "off",
    "import/no-extraneous-dependencies": "off",
    "max-len": [ 1, 120, 2, {
      "ignoreUrls": true,
      "ignoreComments": false
    }],
    "object-curly-newline": "off",
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": "off",
    "@typescript-eslint/no-unused-vars": ["warn"],
    "@typescript-eslint/ban-types": [
      "warn",
      {
        "types": {
          "Object": {
            "message": "Avoid using the `Object` type. Did you mean `object`?"
          },
          "Function": {
            "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
          },
          "Boolean": {
            "message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
          },
          "Number": {
            "message": "Avoid using the `Number` type. Did you mean `number`?"
          },
          "String": {
            "message": "Avoid using the `String` type. Did you mean `string`?"
          },
          "Symbol": {
            "message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
          }
        }
      }
    ]
  }
}
